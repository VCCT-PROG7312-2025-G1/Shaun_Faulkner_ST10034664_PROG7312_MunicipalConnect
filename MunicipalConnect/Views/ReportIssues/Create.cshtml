@model MunicipalConnect.ViewModels.ReportIssueInput
@using MunicipalConnect.Models

@{
    ViewData["Title"] = "Report an Issue";
}

<div class="container py-4">
    <div class="form-card fade-in-up">
        <div class="card-accent"></div>

        <div class="form-hero">
            <span class="hero-chip">New report</span>
            <h2 class="form-title">
                <span class="grad-text">Report an Issue</span>
            </h2>
            <p class="form-subtitle">Help us fix it faster with a few details</p>
        </div>

        <form asp-action="Create" method="post" enctype="multipart/form-data" id="reportForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="mb-3">
                <label asp-for="Location" class="form-label">Location</label>
                <input asp-for="Location" class="form-control form-control-soft" placeholder="Address / location" />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Category" class="form-label">Category</label>
                <select asp-for="Category" class="form-select form-control-soft" asp-items="Html.GetEnumSelectList<IssueCategory>()"></select>
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Description" class="form-label">Description</label>
                <textarea asp-for="Description" class="form-control form-control-soft" rows="5"
                          placeholder="Describe the problem, when you noticed it, and any risks."></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label class="form-label" for="files">Attachments (images/documents)</label>
                <div class="file-wrap">
                    <input id="files" name="files" type="file" class="form-control form-control-soft file-input" multiple
                           accept=".jpg,.jpeg,.png,.bmp,.gif,.pdf,.docx,.xlsx,.txt" />
                    <div class="file-hint">
                        <strong>Click to choose</strong> or drag files here
                        <span class="muted">.jpg .png .pdf .docx .xlsx</span>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Report completeness</label>
                <div class="progress progress-soft" role="progressbar" aria-label="Completeness">
                    <div id="completeBar" class="progress-bar" style="width:0%" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">0%</div>
                </div>
                <small class="text-muted d-block mt-1">
                    Tips: add a landmark, choose the right category, include a clear description (≥ 40 chars), attach a photo if possible.
                </small>
            </div>

            <!-- Buttons -->
            <div class="d-flex gap-2 pt-2">
                <button type="submit" class="btn btn-primary btn-soft">Submit</button>
                <button type="reset" class="btn btn-outline-secondary btn-outline-soft">Reset</button>
                <a asp-controller="Home" asp-action="Index" class="btn btn-link link-soft">Back to Menu</a>
            </div>
        </form>
    </div>
</div>

<style>
    :root {
        --mc-blue: #3b82f6;
        --mc-blue-d: #2563eb;
        --mc-teal: #06b6d4;
        --mc-slate: #1e293b;
        --mc-soft: #e2e8f0;
    }

    /* Card container */
    .form-card {
        position: relative;
        max-width: 820px;
        margin: 0 auto;
        padding: 2rem 2rem 1.5rem 2rem;
        background: #ffffff;
        border: 1px solid #e2e8f0;
        border-radius: 20px;
        box-shadow: 0 14px 36px rgba(2,6,23,0.08);
    }

    .card-accent {
        position: absolute;
        inset: 0 0 auto 0;
        height: 6px;
        border-radius: 20px 20px 0 0;
        background: linear-gradient(90deg, var(--mc-blue), var(--mc-teal));
        box-shadow: 0 6px 14px rgba(59,130,246,0.25);
    }

    .form-hero {
        text-align: center;
        margin-top: .25rem;
        margin-bottom: 1.25rem;
    }

    .hero-chip {
        display: inline-block;
        font-size: .82rem;
        font-weight: 700;
        letter-spacing: .2px;
        color: #fff;
        padding: .25rem .6rem;
        border-radius: 999px;
        background: linear-gradient(90deg,var(--mc-blue),var(--mc-teal));
        box-shadow: 0 6px 14px rgba(6,182,212,.25);
    }

    .form-title {
        margin: .6rem 0 0 0;
    }

    .grad-text {
        background: linear-gradient(90deg, var(--mc-blue), var(--mc-teal));
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        font-weight: 800;
        letter-spacing: -.2px;
    }

    .form-subtitle {
        color: #475569;
        margin: .2rem 0 0 0;
    }

    /* Inputs */
    .form-control-soft,
    .form-select.form-control-soft {
        background: #f8fafc;
        border: 1px solid #e2e8f0;
        color: var(--mc-slate);
        border-radius: 12px;
        transition: background .2s ease, box-shadow .2s ease, border-color .2s ease, transform .08s ease;
    }

        .form-control-soft:hover,
        .form-select.form-control-soft:hover {
            background: #f1f5f9;
        }

        .form-control-soft:focus,
        .form-select.form-control-soft:focus {
            background: #ffffff;
            border-color: var(--mc-blue);
            box-shadow: 0 0 0 .15rem #e2e8f0, 0 0 0 .38rem rgba(59,130,246,.45), 0 8px 18px rgba(6,182,212,.18);
            transform: translateY(-1px);
            outline: none;
        }

    .file-wrap {
        position: relative;
        border: 1px dashed #bfdbfe;
        border-radius: 14px;
        background: linear-gradient(0deg, rgba(59,130,246,.03), rgba(6,182,212,.03));
        padding: 1rem;
        text-align: center;
        transition: border-color .2s ease, background .2s ease, box-shadow .2s ease;
    }

        .file-wrap:hover {
            border-color: #60a5fa;
            box-shadow: 0 10px 20px rgba(37,99,235,.12);
        }

    .file-input {
        background: #fff;
        border: none;
        box-shadow: none;
        border-radius: 10px;
    }

    .file-hint {
        margin-top: .5rem;
        color: #475569;
        font-size: .9rem;
    }

        .file-hint .muted {
            color: #64748b;
            font-weight: 500;
            margin-left: .25rem;
        }

    /* Buttons */
    .btn-soft {
        border-radius: 10px;
        background: linear-gradient(180deg, var(--mc-blue), var(--mc-blue-d));
        border: none;
        box-shadow: 0 8px 16px rgba(37, 99, 235, 0.18);
        transition: transform 0.12s ease, box-shadow 0.2s ease, filter 0.2s ease;
    }

        .btn-soft:hover {
            transform: translateY(-1px);
            box-shadow: 0 10px 18px rgba(37, 99, 235, 0.24);
            filter: brightness(1.02);
        }

    .btn-outline-soft {
        border-radius: 10px;
        border-color: #cbd5e1;
        color: #334155;
        background: #ffffff;
        transition: all 0.2s ease;
    }

        .btn-outline-soft:hover {
            background: #f1f5f9;
            border-color: #94a3b8;
            color: var(--mc-slate);
        }

    .link-soft {
        color: var(--mc-blue);
        text-decoration: none;
        transition: color 0.15s ease, opacity 0.15s ease;
    }

        .link-soft:hover {
            color: var(--mc-blue-d);
            opacity: .9;
            text-decoration: underline;
        }

    /* Progress bar */
    .progress.progress-soft {
        height: 12px;
        background: #f1f5f9;
        border-radius: 999px;
        overflow: hidden;
        border: 1px solid #e2e8f0;
    }

    .progress-bar {
        background: linear-gradient(90deg, #94a3b8, #64748b);
        transition: width .3s ease, background .3s ease, color .2s ease;
        font-size: .8rem;
        font-weight: 700;
        color: #0b1220;
    }

        .progress-bar.low {
            background: linear-gradient(90deg, #fbbf24, #f59e0b);
        }

        .progress-bar.mid {
            background: linear-gradient(90deg, #34d399, #10b981);
        }

        .progress-bar.high {
            background: linear-gradient(90deg, var(--mc-blue), var(--mc-blue-d));
        }

    .fade-in-up {
        animation: fadeInUp .5s ease both;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Small screens */
    @@media (max-width: 420px) {
        .form-card

    {
        padding: 1.25rem;
    }

    .form-title {
        font-size: 1.5rem;
    }

    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const locEl = document.getElementById('Location');
        const catEl = document.getElementById('Category');
        const descEl = document.getElementById('Description');
        const filesEl = document.getElementById('files');
        const bar = document.getElementById('completeBar');

        function score() {
            let s = 0;
            if (locEl && locEl.value.trim().length > 0) s += 30;
            if (catEl && catEl.value) s += 20;
            if (descEl && descEl.value.trim().length >= 40) s += 30;
            if (filesEl && filesEl.files && filesEl.files.length > 0) s += 20;
            return Math.min(s, 100);
        }
        function setBarClass(v) {
            bar.classList.remove('low','mid','high');
            if (v < 50)      bar.classList.add('low');
            else if (v < 80) bar.classList.add('mid');
            else             bar.classList.add('high');
        }
        function update() {
            const v = score();
            bar.style.width = v + '%';
            bar.textContent = v + '%';
            bar.setAttribute('aria-valuenow', v.toString());
            setBarClass(v);
        }
        ['input', 'change'].forEach(evt => {
            locEl?.addEventListener(evt, update);
            catEl?.addEventListener(evt, update);
            descEl?.addEventListener(evt, update);
            filesEl?.addEventListener(evt, update);
        });
        update();
    </script>
}
